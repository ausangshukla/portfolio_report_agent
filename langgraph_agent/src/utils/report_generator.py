import json
import os
from datetime import datetime
from docx import Document
from docx.shared import Inches
import markdown
from bs4 import BeautifulSoup

def generate_word_report(json_report_path: str, output_docx_path: str):
    """
    Generates a well-formatted Word document from a JSON analysis report.

    Args:
        json_report_path (str): The file path to the input JSON report.
        output_docx_path (str): The full file path for the output Word document.
    """
    try:
        # Load the JSON data from the report file
        with open(json_report_path, 'r', encoding='utf-8') as f:
            report_data = json.load(f)

        # Create a new Word document
        document = Document()

        document.add_heading('Portfolio Analysis Report', level=0)
        document.add_paragraph('This document provides a detailed analysis of the portfolio, '
                               'generated by the LangGraph agent.')
        document.add_paragraph('\n') # Add a blank line for spacing

        # Iterate through each section in the report data
        for section in report_data:
            if "section" in section and "content" in section:
                # Add section heading
                document.add_heading(section["section"], level=1)
                
                # Convert markdown content to HTML, then use BeautifulSoup to extract plain text
                html_content = markdown.markdown(section["content"])
                soup = BeautifulSoup(html_content, 'html.parser')
                plain_text_content = soup.get_text()
                document.add_paragraph(plain_text_content)

                # Add references if available
                if "references" in section and section["references"]:
                    document.add_heading('References', level=2)
                    for ref in section["references"]:
                        document.add_paragraph(f"- {ref.get('document', 'N/A')}: {ref.get('location', 'N/A')}")
                
                document.add_paragraph('\n') # Add a blank line after each section

        # Ensure the output directory exists
        os.makedirs(os.path.dirname(output_docx_path), exist_ok=True)

        # Save the document
        document.save(output_docx_path)
        print(f"Word document successfully generated at '{output_docx_path}'")

    except FileNotFoundError:
        print(f"Error: JSON report file not found at '{json_report_path}'")
    except json.JSONDecodeError:
        print(f"Error: Could not decode JSON from '{json_report_path}'. Ensure it's a valid JSON file.")
    except Exception as e:
        print(f"An unexpected error occurred: {e}")

